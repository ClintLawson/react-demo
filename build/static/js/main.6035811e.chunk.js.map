{"version":3,"sources":["components/ToDoList/AddToDo.js","components/ToDoList/DisplayToDos.js","components/ToDoList/ToDoList.js","components/AuthToDoApp/AuthToDoApp.js","App.js","reportWebVitals.js","index.js"],"names":["AddToDo","setNextToDo","createToDo","nextToDo","onSubmit","onChange","e","target","value","updateToDo","type","DisplayToDos","list","statusChange","deleteToDo","mystyle","textDecoration","length","map","td","i","style","complete","title","marginLeft","onClick","ToDoList","props","useState","ToDo","setToDo","preventDefault","copy","filter","loginRequest","scopes","AuthToDoApp","useMsal","instance","accounts","inProgress","useEffect","testACCt","getAllAccounts","console","log","margin","minWidth","maxWidth","padding","textAlign","logout","catch","error","loginPopup","pca","msal","auth","clientId","authority","redirectUri","cache","cacheLocation","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6035811e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst AddToDo = ({setNextToDo, nextToDo, createToDo}) => {\r\n    //update form prop as input changes\r\n    const updateToDo = (e) => {\r\n        setNextToDo(e.target.value)\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <form onSubmit={ createToDo }>\r\n                <input onChange={ (e) => updateToDo(e) } />\r\n                <input type={'submit'} value={'Add To Do'}/>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\nexport default AddToDo;","import React from 'react'\r\n\r\nconst DisplayToDos = ({list, statusChange, deleteToDo}) =>{\r\n    //recieve an array of to dos and map them into elements to display\r\n    \r\n    const mystyle = {\r\n        textDecoration: \"line-through\",\r\n    }\r\n\r\n    return(\r\n        <>\r\n        Display To Do's below\r\n        {list.length !== 0 && list.map( (td, i) => {\r\n            return(\r\n                <p key={i}>\r\n                    <input type={'checkbox'} onChange={ () => statusChange(i) }/>\r\n                    <span style={ td.complete ? mystyle : null } >{td.title}</span>\r\n                    <button style={{ marginLeft : \"10px\"}} onClick={ () => deleteToDo(i) }>Delete</button>\r\n                </p>)\r\n            } \r\n        )}\r\n        </>\r\n    )\r\n}\r\nexport default DisplayToDos;","import React,{ useState } from 'react'\r\nimport AddToDo from './AddToDo'\r\nimport DisplayToDos from './DisplayToDos'\r\n\r\nconst ToDoList = (props) => {\r\n\r\n    const [nextToDo, setNextToDo] = useState('') \r\n\r\n    const [ToDo, setToDo] = useState([\r\n        {title: 'Get Black Belt', complete: false}, \r\n        {title: 'Get Red Belt', complete: false}, \r\n        {title: 'Get Yellow Belt', complete: false}\r\n    ])\r\n\r\n\r\n    // function for adding todo\r\n    const createToDo = (e) =>{\r\n        e.preventDefault()\r\n        setToDo([...ToDo, {title: nextToDo, complete: false}])\r\n    }\r\n\r\n    //toggle complete\r\n    const complete = (i) => {\r\n        let copy = [...ToDo]\r\n        copy[i].complete = !copy[i].complete\r\n        setToDo(copy)\r\n    }\r\n\r\n    // function for deleting\r\n    const deleteToDo = (i) => {\r\n        // console.log(\"Deleting \", i)\r\n        setToDo(ToDo.filter( td => td !== ToDo[i]))\r\n    }\r\n\r\n    return(\r\n        <div style={props.style}>\r\n            To Do List\r\n            <AddToDo setNextToDo={ setNextToDo } nextToDo={nextToDo} createToDo={ createToDo }/>\r\n            <DisplayToDos list={ ToDo } statusChange={ complete } deleteToDo={ deleteToDo }/>\r\n        </div>\r\n    )\r\n}\r\nexport default ToDoList;","import React, { useEffect } from 'react'\r\nimport ToDoListApp from '../ToDoList/ToDoList' \r\n\r\n// import * as msal from \"@azure/msal-browser\";\r\nimport { AuthenticatedTemplate, MsalProvider, UnauthenticatedTemplate, useMsal } from \"@azure/msal-react\";\r\n\r\n// const configuration = {\r\n//     auth: {\r\n//         clientId: \"1877b32e-fba5-4a06-a0fd-6f867ba4ea01\",\r\n//         authority: \"https://login.microsoftonline.com/common\",\r\n//         redirectUri: \"http://localhost:3000\",\r\n//     }\r\n// };\r\n\r\nconst loginRequest = {\r\n    scopes: [\"openid\", \"profile\", \"User.Read\"]\r\n};\r\n\r\n// const pca = new msal.PublicClientApplication(configuration);\r\n\r\nconst AuthToDoApp = (props) => {\r\n\r\n    const { instance, accounts, inProgress } = useMsal()\r\n    useEffect(()=>{\r\n        // instance.loginPopup(loginRequest)\r\n        //     .catch(error => console.log(error))\r\n        let testACCt = instance.getAllAccounts()\r\n        // instance.ssoSilent({loginHint:  testACCt[0].username })\r\n        console.log(accounts, instance, testACCt)\r\n    },[])\r\n\r\n    \r\n\r\n    const userStatus = () => {\r\n        if (accounts.length > 0) {\r\n            return <span>There are currently {accounts.length} users signed in!</span>\r\n        } else if (inProgress === \"login\") {\r\n            return <span>Login is currently in progress!</span>\r\n        } else {\r\n            return (\r\n                <>\r\n                    <span>There are currently no users signed in!</span><br/>\r\n                    <button style={{margin: '10px', padding: '5px 10px'}} \r\n                        onClick={() => \r\n                            instance.loginPopup(loginRequest)\r\n                                .catch(error => console.log(error))\r\n                        }    \r\n                    >\r\n                       Login\r\n                    </button>\r\n\r\n                </>\r\n            );\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div\r\n            style={{margin:'auto', minWidth:'50%', maxWidth:'900px', padding:'20px', textAlign: 'center'}}\r\n        >\r\n\r\n            <h1>\r\n                Atheniticated To do App:\r\n            </h1>\r\n            <AuthenticatedTemplate>\r\n                <ToDoListApp \r\n\r\n                />  \r\n                <button style={{margin: '10px', padding: '5px 10px'}} \r\n                        onClick={() => \r\n                            instance.logout(loginRequest)\r\n                                .catch(error => console.log(error))\r\n                        }    \r\n                >\r\n                    Logout\r\n                </button>\r\n            </AuthenticatedTemplate>\r\n\r\n            <UnauthenticatedTemplate >\r\n                <p style={{textAlign: 'center'}}>No users are signed in!</p>\r\n            </UnauthenticatedTemplate>\r\n\r\n            <h4>\r\n                { userStatus() }\r\n            </h4>\r\n\r\n        </div>\r\n)}\r\nexport default AuthToDoApp;","import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\n\nimport AuthToDoApp from './components/AuthToDoApp/AuthToDoApp'\nimport * as msal from \"@azure/msal-browser\";\nimport { MsalProvider } from '@azure/msal-react';\n\n\nconst configuration = {\n  auth: {\n      clientId: \"1877b32e-fba5-4a06-a0fd-6f867ba4ea01\",\n      authority: \"https://login.microsoftonline.com/common\",\n      redirectUri: \"http://localhost:3000\",\n  },\n  cache: {\n    cacheLocation: \"localStorage\", // This configures where your cache will be stored\n    // storeAuthStateInCookie: false, // Set this to \"true\" if you are having issues on IE11 or Edge\n  },\n  // system:{\n    // windowHashTimeout: 60000,\n    // iframeHashTimeout: 6000,\n    // loadFrameTimeout: 0,\n    // asyncPopups: true\n  // }\n};\n\nconst pca = new msal.PublicClientApplication(configuration);\n\n\nfunction App() {\n  return (\n    <div className={'wrapper'} >\n      <MsalProvider instance={pca}>\n        <AuthToDoApp />\n      </MsalProvider>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}